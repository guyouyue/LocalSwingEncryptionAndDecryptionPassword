package org.example;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import org.example.utils.AnalysisPasswordUtil;
import org.example.utils.EncryptPasswordUtil;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Arrays;
import java.util.List;

import static org.example.JFApplication.salt;

/**
 * 窗体页面
 *
 * @author MaybeLXH
 * @since 2024-02-07 0:32
 */
public class JFTest {
    public JPanel mainPanel;
    private JTextArea 请输入文本TextArea;
    private JTextArea 输出文本TextArea;
    private JButton 加密按钮Button;
    private JButton 解密按钮Button;
    private JPanel 输入窗体;
    private JPanel 输出窗体;


    public JFTest() {
        加密按钮Button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String text = 请输入文本TextArea.getText();
                输出文本TextArea.setText(EncryptPasswordUtil.encrypt(text, salt));
            }
        });
        解密按钮Button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String text = 请输入文本TextArea.getText();
                输出文本TextArea.setText(AnalysisPasswordUtil.analysis(text, salt));
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        输入窗体 = new JPanel();
        输入窗体.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(输入窗体, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        请输入文本TextArea = new JTextArea();
        请输入文本TextArea.setLineWrap(true);
        请输入文本TextArea.setRows(0);
        请输入文本TextArea.setText("");
        请输入文本TextArea.setToolTipText("");
        请输入文本TextArea.setWrapStyleWord(false);
        输入窗体.add(请输入文本TextArea, new GridConstraints(0, 0, 2, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_VERTICAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(600, 200), null, 0, false));
        加密按钮Button = new JButton();
        加密按钮Button.setText("加密按钮");
        输入窗体.add(加密按钮Button, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        解密按钮Button = new JButton();
        解密按钮Button.setText("解密按钮");
        输入窗体.add(解密按钮Button, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        输出窗体 = new JPanel();
        输出窗体.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(输出窗体, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        输出文本TextArea = new JTextArea();
        输出文本TextArea.setLineWrap(true);
        输出文本TextArea.setText("");
        输出窗体.add(输出文本TextArea, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(600, 200), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

//    public static void main(String[] args) {
//        JFrame jf = new JFrame("Notion个人账号密码加密解密");
//        jf.setContentPane(new JFTest().mainPanel); // 使用 JFTest 的 mainPanel 作为内容面板
//        jf.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
//        jf.pack();
//        jf.setVisible(true);
//        jf.setLocationRelativeTo(null);
//    }
}
